import SwiftUI

struct ContentView: View {
    @State private var selectedCar: Car? = nil // To track the selected car for enlargement
    
    let cars = [
        Car(imageName: "toyota", brand: "Toyota", year: 2020, price: 25000.0),
        Car(imageName: "bmw", brand: "BMW", year: 2023, price: 45000.0),
        Car(imageName: "audi", brand: "Audi", year: 2022, price: 40000.0)
    ]
    
    var body: some View {
        ZStack {
            if let selectedCar = selectedCar {
                // Enlarged car view
                EnlargedCarView(car: selectedCar) {
                    self.selectedCar = nil // Close the enlarged view when tapped
                }
            } else {
                // Regular car list
                VStack(spacing: 16) {
                    ForEach(cars) { car in
                        CarView(car: car)
                            .onTapGesture {
                                self.selectedCar = car // Set the selected car
                            }
                    }
                }
                .padding()
            }
        }
        .animation(.easeInOut, value: selectedCar) // Smooth transition between views
    }
}

struct CarView: View {
    let car: Car
    
    var body: some View {
        VStack {
            Image(car.imageName)
                .resizable()
                .scaledToFit()
                .frame(height: 100)
                .cornerRadius(8)
            
            Text(car.brand).font(.headline)
            Text("Year: \(car.year)").font(.subheadline).foregroundColor(.gray)
            Text("$\(car.price, specifier: "%.2f")").font(.subheadline).foregroundColor(.blue)
        }
        .padding()
        .background(Color.white)
        .cornerRadius(12)
        .shadow(radius: 4)
    }
}

struct EnlargedCarView: View {
    let car: Car
    var onClose: () -> Void // Callback to close the view
    
    var body: some View {
        VStack {
            Spacer()
            
            Image(car.imageName)
                .resizable()
                .scaledToFit()
                .frame(width: 300, height: 200)
                .cornerRadius(16)
            
            Text(car.brand).font(.largeTitle).bold()
            Text("Year: \(car.year)").font(.title2).foregroundColor(.gray)
            Text("$\(car.price, specifier: "%.2f")").font(.title3).foregroundColor(.blue)
            
            Spacer()
            
            Button(action: onClose) {
                Text("Close")
                    .font(.headline)
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(8)
            }
            .padding(.bottom)
        }
        .background(Color(white: 0.95).edgesIgnoringSafeArea(.all))
    }
}

// MARK: - Car Model
struct Car: Identifiable {
    let id = UUID()
    let imageName: String
    let brand: String
    let year: Int
    let price: Double
}
